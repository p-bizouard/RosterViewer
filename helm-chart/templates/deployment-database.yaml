apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm-chart.fullname" . }}-database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "helm-chart.fullname" . }}-database
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ include "helm-chart.fullname" . }}-database
    spec:
      containers:
      - image: {{ .Values.database.image.repository }}:{{ .Values.database.image.version }}
        name: {{ include "helm-chart.fullname" . }}-database
        env:
        - name: POSTGRES_USER
          value: {{ include "helm-chart.fullname" . }}
        - name: POSTGRES_PASSWORD
          value: {{ include "helm-chart.fullname" . }}
        - name: POSTGRES_DB
          value: {{ include "helm-chart.fullname" . }}
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - containerPort: {{ .Values.database.port }}
          name: database
        imagePullPolicy: Always
        # livenessProbe:
        #   exec:
        #     command: ["mysqladmin", "ping"]
        #   initialDelaySeconds: 30
        #   periodSeconds: 10
        #   timeoutSeconds: 5
        # readinessProbe:
        #   exec:
        #     # Check we can execute queries over TCP (skip-networking is off).
        #     command: ["mysql", "-h", "127.0.0.1", "-P", "{{ .Values.database.port }}", "-e", "SELECT 1 "]
        #   initialDelaySeconds: 5
        #   periodSeconds: 2
        #   timeoutSeconds: 1
        volumeMounts:
        - name: {{ include "helm-chart.fullname" . }}-database
          mountPath:  /var/lib/postgresql/data
      volumes:
        - name: {{ include "helm-chart.fullname" . }}-database
          persistentVolumeClaim:
            claimName: {{ include "helm-chart.fullname" . }}-database