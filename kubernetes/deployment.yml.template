apiVersion: v1
kind: Service
metadata:
  name: rosterviewer-database-service
  labels:
    app: rosterviewer-database
spec:
  ports:
  - port: 3306
    protocol: TCP
  selector:
    app: rosterviewer-database
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: database
spec:
  selector:
    matchLabels:
      app: rosterviewer-database
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: rosterviewer-database
    spec:
      imagePullSecrets:
        - name: registrypullsecret
      containers:
      - image: ${DOCKER_REGISTRY}/rosterviewer/database:${COMMIT_SHA1}
        name: database
        env:
        - name: MYSQL_ALLOW_EMPTY_PASSWORD
          value: "1"
        ports:
        - containerPort: 3306
          name: database-port
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command: ["mysqladmin", "ping"]
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            # Check we can execute queries over TCP (skip-networking is off).
            command: ["mysql", "-h", "127.0.0.1", "-e", "SELECT 1"]
          initialDelaySeconds: 5
          periodSeconds: 2
          timeoutSeconds: 1
        volumeMounts:
        - name: database-data
          mountPath:  /var/lib/mysql
      volumes:
        - name: database-data
          persistentVolumeClaim:
            claimName: database-data
---
apiVersion: v1
kind: Service
metadata:
  name: rosterviewer-application-service
  labels:
    run: rosterviewer-application-service
spec:
  type: LoadBalancer
  ports:
  - port: 3000
    protocol: TCP
  selector:
    app: rosterviewer-application
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webserver
  labels:
    app: rosterviewer-application
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rosterviewer-application
  template:
    metadata:
      labels:
        app: rosterviewer-application
    spec:
      imagePullSecrets:
        - name: registrypullsecret
      containers:
      - image: ${DOCKER_REGISTRY}/rosterviewer/application:${COMMIT_SHA1}
        name: application
        env:
        - name: DATABASE_URL
          value: "mysql://root:@rosterviewer-database-service:3306/rosterviewer"
        - name: CONTACT_EMAIL
          value: $CONTACT_EMAIL
        ports:
        - containerPort: 3000
        imagePullPolicy: Always
      #   volumeMounts:
      #   - name: hostvol
      #     mountPath: /var/www/html/
      # volumes:
      #   - name: hostvol
      #     hostPath:
      #       path: /data
      initContainers:
      - name: init-mysql
        image: busybox
        command: ['sh', '-c', 'until nslookup rosterviewer-database-service; do echo waiting for mysql; sleep 2; done;']
